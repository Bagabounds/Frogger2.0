16 cols * 15 rows

absolute dimensions = 512 * 480 px
cellSize = 32 px
drawingBoard = 16 px

velocidade do thread deve ser a unidade de tempo mínima.
Assim, em vez de a cada pausa de thread dar-se dois métodos de movimento,
fazendo com que a imagem salte de repente duas casas e disturbe o game play,
assim, os objectos mais rápidos mexem-se a cada thread pause, e os mais lentos
mexem-se a cada 2 thread pauses. O player mexe-se livremente.
Este é o princípio dos jogos Game & Watch, pois não conseguem ter processamento
veloz, mas mantém a sua gameplay


ecran de game over com pontuação e um restart.

Como definir speeds diferentes:

	A cada thread.sleep, é acrescentado 1 a um contador. Os objectos que
	são mais lentos só se movem quando o contador é par. Isto garante
	que todos os objectos mais velozes movem em cada thread.sleep,
	e os mais lentos apenas se movem de 2 em 2, ou em múltiplos de 3,
	etc…
	Se necessário, reiniciar o contador para não ultrapassar limites
	do integer. Caso isto aconteça, o contador deve ser reiniciado num
	valor que seja múltiplo comum a todos os objectos e as suas velocidades.


 /*TODO preloading. load all images in an array 
    the size of the array is the number of objects that need a sprite. the preload is made on the creation of the field.*/

//////////////////
Erro de buffering:
Exception in thread "AWT-EventQueue-0" java.lang.NullPointerException
	at org.academiadecodigo.simplegraphics.graphics.Canvas$CanvasComponent.paintComponent(Unknown Source)
	at javax.swing.JComponent.paint(JComponent.java:1056)
	at javax.swing.JComponent.paintChildren(JComponent.java:889)
	at javax.swing.JComponent.paint(JComponent.java:1065)
	at javax.swing.JComponent.paintChildren(JComponent.java:889)
	at javax.swing.JComponent.paint(JComponent.java:1065)
	at javax.swing.JLayeredPane.paint(JLayeredPane.java:586)
	at javax.swing.JComponent.paintChildren(JComponent.java:889)
	at javax.swing.JComponent.paintToOffscreen(JComponent.java:5217)
	at javax.swing.RepaintManager$PaintManager.paintDoubleBuffered(RepaintManager.java:1579)
	at javax.swing.RepaintManager$PaintManager.paint(RepaintManager.java:1502)
	at javax.swing.RepaintManager.paint(RepaintManager.java:1272)
	at javax.swing.JComponent.paint(JComponent.java:1042)
	at java.awt.GraphicsCallback$PaintCallback.run(GraphicsCallback.java:39)
	at sun.awt.SunGraphicsCallback.runOneComponent(SunGraphicsCallback.java:79)
	at sun.awt.SunGraphicsCallback.runComponents(SunGraphicsCallback.java:116)
	at java.awt.Container.paint(Container.java:1975)
	at java.awt.Window.paint(Window.java:3904)
	at javax.swing.RepaintManager$4.run(RepaintManager.java:842)
	at javax.swing.RepaintManager$4.run(RepaintManager.java:814)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:76)
	at javax.swing.RepaintManager.paintDirtyRegions(RepaintManager.java:814)
	at javax.swing.RepaintManager.paintDirtyRegions(RepaintManager.java:789)
	at javax.swing.RepaintManager.prePaintDirtyRegions(RepaintManager.java:738)
	at javax.swing.RepaintManager.access$1200(RepaintManager.java:64)
	at javax.swing.RepaintManager$ProcessingRunnable.run(RepaintManager.java:1732)
	at java.awt.event.InvocationEvent.dispatch(InvocationEvent.java:311)
	at java.awt.EventQueue.dispatchEventImpl(EventQueue.java:756)
	at java.awt.EventQueue.access$500(EventQueue.java:97)
	at java.awt.EventQueue$3.run(EventQueue.java:709)
	at java.awt.EventQueue$3.run(EventQueue.java:703)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:76)
	at java.awt.EventQueue.dispatchEvent(EventQueue.java:726)
	at java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:201)
	at java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:116)
	at java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:105)
	at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:93)
	at java.awt.EventDispatchThread.run(EventDispatchThread.java:82)
//////////